Changes for npg_sequencescape_warehouse
=======================================

 - Removing Tidyp dependency from CI

release 45.0.0
 - remove the loader and the warehouse lims driver since they are
   no longer in use
 - fix some auto generated dbic code
 - remove dependency on npg_qc for rpt_key role

release 44.0.0
 - remove functionality for loading npg_run_status table

release 43.2.4
 - Travis CI build fixes

release 43.2.3
 - run folders for test data restructured to reflect new-style
   product hierarchy

release 43.2.2
 - blacklist PBP policies which were previously disabled in each
   module explicitly - makes tests pass even if some of these
   policies are not installed

release 43.2.1
 - test data fixes following ml warehouse schema changes, see
   https://github.com/wtsi-npg/ml_warehouse/pull/104 for details

release 43.2
 - accommodate a change in data format returned by the autoqc retriever
   and the retriever of instrument info

release 43.1
 - exclude values for column names not present in this warehouse
 - load q30 and q40 yields from qX_Yield autoqc results

release 43.0.3
 - test data changes to ensure compatibility with npg_qc release 64.1
 - travis build: request uuid dev libraries are present

release 43.0.2
 - adds TODO test to fix temporary DB fail test in npg_warehouse-loader

release 43.0.1
 - meaningful variable name

release 43.0
 - Changes needed to convert an svn project to a git project.
   Only recent history has been transferred from the svn project.
 - Travis CI integration added.
 - LIMs driver type option for the warehouse loader, defaults to
   ml_warehouse_fc_cache
 - stop loading LIMs data that are only available via an xml LIMs driver
 - try to load LIMs data for all runs that are being loaded, remove 'recent' option
 - stop loading 'is_dev' column of the npg_information table

release 42.1.1

release 42.1
 - Code changes to eliminate warnings and PBP issues when running under Perl 5.22.2

release 42.0
 - Updated DBIx binding.
 - DBIx binding generator filters code to make it more acceptable for perlcritic.

See earlier project history in the internal SVN data_handling project.

